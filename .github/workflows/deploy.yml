name: Deploy War Room

on:
  push:
    branches: [main, production]
  pull_request:
    branches: [main]

jobs:
  test-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: |
        cd frontend
        npm ci

    - name: Run tests
      run: |
        cd frontend
        npm run test:ci
      env:
        SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
        SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}
        JWT_SECRET: ${{ secrets.JWT_SECRET }}

    - name: Build frontend
      run: |
        cd frontend
        npm run build
      env:
        NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
        NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}
        MENTIONLYTICS_API_TOKEN: ${{ secrets.MENTIONLYTICS_API_TOKEN }}
        META_ACCESS_TOKEN: ${{ secrets.META_ACCESS_TOKEN }}
        GOOGLE_ADS_DEVELOPER_TOKEN: ${{ secrets.GOOGLE_ADS_DEVELOPER_TOKEN }}
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        POSTHOG_API_KEY: ${{ secrets.POSTHOG_API_KEY }}
        POSTHOG_HOST: ${{ secrets.POSTHOG_HOST }}

    - name: Deploy to Vercel (Production)
      if: github.ref == 'refs/heads/main'
      uses: amondnet/vercel-action@v25
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
        vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
        working-directory: frontend
        vercel-args: '--prod'
        
    - name: Deploy Backend to Encore
      if: github.ref == 'refs/heads/main'
      run: |
        cd backend
        npx encore deploy --env=production
      env:
        ENCORE_AUTH_TOKEN: ${{ secrets.ENCORE_AUTH_TOKEN }}

    - name: Notify deployment status
      if: always()
      uses: 8398a7/action-slack@v3
      with:
        status: ${{ job.status }}
        webhook_url: ${{ secrets.SLACK_WEBHOOK }}
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}