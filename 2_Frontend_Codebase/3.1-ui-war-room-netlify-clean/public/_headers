# Global security headers for all routes
/*
  # Prevent clickjacking attacks
  X-Frame-Options: DENY
  
  # Prevent MIME type sniffing
  X-Content-Type-Options: nosniff
  
  # Control referrer information
  Referrer-Policy: strict-origin-when-cross-origin
  
  # Basic XSS protection (though React handles most of this)
  X-XSS-Protection: 1; mode=block
  
  # Strict Transport Security (HTTPS only)
  Strict-Transport-Security: max-age=31536000; includeSubDomains
  
  # Content Security Policy - Restrictive but functional for React apps
  Content-Security-Policy: default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; font-src 'self' https://fonts.gstatic.com; img-src 'self' data: https:; connect-src 'self' https: wss:; frame-ancestors 'none';
  
  # Permissions Policy - Restrict dangerous browser features
  Permissions-Policy: accelerometer=(), ambient-light-sensor=(), autoplay=(), battery=(), camera=(), cross-origin-isolated=(), display-capture=(), document-domain=(), encrypted-media=(), execution-while-not-rendered=(), execution-while-out-of-viewport=(), fullscreen=(), geolocation=(), gyroscope=(), keyboard-map=(), magnetometer=(), microphone=(), midi=(), navigation-override=(), payment=(), picture-in-picture=(), publickey-credentials-get=(), screen-wake-lock=(), sync-xhr=(), usb=(), web-share=(), xr-spatial-tracking=()

# Admin-specific routes - Extra security
/admin-dashboard
  # Stricter CSP for admin routes
  Content-Security-Policy: default-src 'self'; script-src 'self'; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; font-src 'self' https://fonts.gstatic.com; img-src 'self' data:; connect-src 'self' https:; frame-ancestors 'none';
  
  # Cache control for sensitive admin content
  Cache-Control: no-store, no-cache, must-revalidate, proxy-revalidate
  
  # Additional security for admin
  X-Robots-Tag: noindex, nofollow, noarchive, nosnippet